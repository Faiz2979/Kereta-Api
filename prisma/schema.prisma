// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int        @id @default(autoincrement())
  username  String
  password  String
  email     String     @unique
  role      String
  nama      String?
  alamat    String?
  telp      String?
  nik       String?
  pelanggan Pelanggan?
  petugas   Petugas?
}

model Pelanggan {
  id        Int              @id @default(autoincrement())
  nik       String           @unique
  nama      String
  alamat    String?
  telp      String?
  userId    Int              @unique
  user      Users            @relation(fields: [userId], references: [id], onDelete: Cascade)
  pembelian PembelianTiket[]
}

model Petugas {
  id     Int    @id @default(autoincrement())
  nama   String
  alamat String
  telp   String
  userId Int    @unique
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Kereta {
  id         Int       @id @default(autoincrement())
  namaKereta String
  deskripsi  String
  kelas      String
  gerbong    Gerbong[]
  jadwal     Jadwal[]
}

model Gerbong {
  id       Int     @id @default(autoincrement())
  nama     String
  kuota    Int
  keretaId Int
  kereta   Kereta  @relation(fields: [keretaId], references: [id], onDelete: Cascade)
  kursi    Kursi[]
}

model Kursi {
  id               Int              @id @default(autoincrement())
  nomorKursi       String
  gerbongId        Int
  gerbong          Gerbong          @relation(fields: [gerbongId], references: [id], onDelete: Cascade)
  detailPembelian  DetailPembelian[]
}

model Jadwal {
  id                  Int              @id @default(autoincrement())
  keretaId            Int
  waktuBerangkat      String
  waktuTiba           String
  stasiunBerangkat    String
  stasiunTiba         String
  asalKeberangkatan   String
  tujuanKeberangkatan String
  tanggalBerangkat    DateTime
  tanggalKedatangan   DateTime
  harga               Float
  kuota               Int
  pembelianTiket      PembelianTiket[]
  kereta              Kereta           @relation(fields: [keretaId], references: [id])
}

model PembelianTiket {
  id              Int               @id @default(autoincrement())
  tanggal         DateTime
  pelangganId     Int
  jadwalId        Int
  penumpang       Penumpang[]
  pelanggan       Pelanggan         @relation(fields: [pelangganId], references: [id])
  jadwal          Jadwal            @relation(fields: [jadwalId], references: [id])
  detailPembelian DetailPembelian[]
}

model Penumpang {
  id               Int            @id @default(autoincrement())
  nama             String
  nik              String
  pembelianTiketId Int
  pembelianTiket   PembelianTiket @relation(fields: [pembelianTiketId], references: [id])
}

model DetailPembelian {
  id               Int              @id @default(autoincrement())
  pembelianTiketId Int
  kursiId          Int
  pembelianTiket   PembelianTiket   @relation(fields: [pembelianTiketId], references: [id], onDelete: Cascade)
  kursi            Kursi            @relation(fields: [kursiId], references: [id], onDelete: Cascade)
}
